{"path":"211275022田昊东.pdf","text":"0 .0 .0 .1 3 、 由于一个指令占据两个字节，而指令顺序执行时有 PC=PC+2 ，这说明存储器中的地址 1 对应一个字 节，即计算机存储器的编制单位为一个字节（ 8 位）。 F i g u r e 0 - 1 0 .0 .0 .1 4 、 RegWr ：所有需要写入到寄存器的指令不能正确执行，即 RIUJ ALUASrc ：不能取 PC 作为加数， jal 、 auipc 不能正确执行 Branch ：体哦阿健转移指令不能正确执行，如 beq Jump ：转移指令不能正确执行 jal MemWr ：无法写入数据到存储器， S 型指令无法执行 MemtoReg ：无法从存储器读取数据到寄存器， lw 指令无法执行 0 .0 .0 .1 5 、 RegWr ：不需要写入数据到寄存器的指令不能正确执行，即 BS ALUASrc ：加数固定为 PC ，除了 jal ， auipc 之外其它使用 ALU 的指令如 RI型都无法正确执行 Branch ： B 指令以外都可能出错，根据运算器标志位进行跳转 Jump ：除了 jal 之另外都出错，进行非必要的跳转 MemWr ：总是写入到存储器，除了 S 指令都可能错误的将数据写入到存储器 MemtoReg ：总是从存储器读取数据，除了 rw 指令都可能出错 0 .0 .0 .1 6 、 设 所 占 比 例 为 即 至 少 占   x o r r s r s r t   x o r r t r s r t   x o r r s r s r t 1 2 3 F e n c e 0 - 1 在单周期数据通路中由于一个时钟周期只能写入到一个寄存器，因此无法实现 swap 指令 对于多周期数据通路可以实现，比如可以先将一个值存储到存储器，然后将另一个值写入到该寄存 器，再从存储器读取 0 .0 .0 .1 11 、 不能，时钟周期是根据最耗时的操作决定的，而最耗时的操作为存储单元的读取，即使 ALU 操作加 快也不会影响流水线的执行速度 不会对流水线的性能产生影响 时钟周期变为 210 ，流水线性能降低 0 .0 .0 .1 13 、 [80,30,60|50,70,10] 即时钟周期为 170 ，考虑流水段寄存器，时钟周期为 指令吞吐率为 ( 指令 / 秒 ) 单条指令执行时间为 ，总体平均执行时间为 [80,30|60,50|70,10], 时钟周期为 指令吞吐率为 ( 指令 / 秒 ) 单条指令执行时间为 ，总体平均执行时间为 [80|30,60|50|70,10], 时钟时钟周期为 指令吞吐率为 ( 指令 / 秒 ) 单条指令执行时间为 ，总体平均执行时间为 [80|30|60|50|70,10], 时钟时钟周期为 指令吞吐率为 ( 指令 / 秒 ) 单条指令执行时间为 ，总体平均执行时间为 0 .0 .0 .1 14 、 数据相关： (1)add 与 (2)add (2)add 与 (3)lw (2)add 与 (4)add (3)lw 与 (4)add 不使用转发： 需要在 4 条指令之间的三个空隙均插入 3 个 nop ，即总共需要 9 个 nop 采用转发：不能完全解决数据冒险，因为存在 load-use 的情况，需要加入一条 nop 指令     s w r s i m m ( r 0 )     a d d i r s r t 0     l w r t i m m ( r 0 ) 1 2 3 F e n c e 0 - 2 0 .0 .0 .1 17 、 0 .0 .0 .1 18 、 如果在 EX 阶段确定分支结果，则 lw 与 bne 发生 1 个时钟周期的阻塞 j 指令执行之后会发生 1 个时钟周期的阻塞，（假设在 ID 阶段就取出地址） l w   s 2 , 1 0 0 ( s 6 ) a d d s 6 , s 4 , s 7 a d d s 2 , s 2 , s 3 l w   s 3 , 2 0 0 ( s 7 ) l w   s 2 , 3 0 0 ( s 8 ) s u b s 3 , s 4 , s 6 b e q s 2 , s 8 , L o o p 1 2 3 4 5 6 7 F e n c e 0 - 3","libVersion":"0.2.4","langs":""}