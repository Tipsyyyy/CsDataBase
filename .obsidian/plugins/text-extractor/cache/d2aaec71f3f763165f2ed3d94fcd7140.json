{"path":"课程/数字逻辑与计算机组成/课件/第2章 数字逻辑基础（2）.pdf","text":"1 逻辑函数 真值表与波形图 标准范式表示 第三讲 逻辑关系描述 3.1 逻辑函数 逻辑函数是反映输入变量和输出变量之间逻辑关系的表达式。 • 将一组取值范围在{0，1} 之中的输入变量唯一映射到在同样取 值范围中的输出变量。 2 X1,X2,… ,Xn F(X1,X2,… ,Xn) 0 0 … 0 0 0 … 1 … 0 1 … 0 0 1 … 1 … 1 0 … 0 … 1 1 … 1 0 0 … 1 0 … 1 … 0 设X1, X2, …, Xn是n个变量， 每个变量取值0 或者取值1。 F(X1, X2, …, Xn) 是X1, X2, …, Xn的一个逻辑函数， 其取值由X1, X2, …, Xn的取 值决定——所有可能的情况 3.1 逻辑函数  每一组输入组合都有一个确定的输出值  每个逻辑函数都有一组确定的输出  两个输入变量（4组输入组合）的函数F(x,y)可能的16组输出值如下： 3 三个输入变量有多少种可能的逻辑函数f(x,y,z)? X Y Fi(X, Y) 0 0 0 1 1 0 1 1 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 0 0 0 0 1 1 1 1 0 0 0 0 1 1 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 0 1 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 有2^8=256种 3.2 真值表与波形图  真值表 true table：用二维表的形式列出逻 辑函数所有的输入组合和对应的输出值。  标题栏左侧为输入组合，右侧对应输出。  输入组合通常按照递增顺序排列，输出写在 相邻的列中。  n个输入变量逻辑函数的真值表有2n行。  当n较大时，真值表将变得十分巨大而失去 使用价值。 4 输出Y的逻辑表达式是 ？ A B C Y 真值表 0 0 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 0 0 0 1 0 1 1 1𝐘𝐘 = 𝐀𝐀 � 𝐁𝐁 + 𝐁𝐁 � 𝐂𝐂 + 𝐀𝐀 � 𝐂𝐂 3.2 真值表与波形图  波形图描绘了逻辑函数输出变量对于输入变量的变化所产生的响应。 在理想状态下，忽略时间延迟。 • 横轴表示时间 • 纵向用横线的高低来表示逻辑值大小  完整的波形图至少需要列出所有的输入组合和所对应的输出值 5 Y=A·B 3.3 逻辑函数的标准表示  乘积项：包含1个或1个以上逻辑变量的与项。例如，X、X� Y和 �X � �Y � Z都是乘积项。  求和项：包含1个或1个以上逻辑变量的或项。例如，X、X+Y和 �X + �Y + Z都是求和项。  “与-或”表达式或积之和表达式(Sum of Product，SOP)：多 个乘积项的或运算。例如：X� Y + �X � �Y � Z。  “或-与”表达式或和之积表达式(Product of Sum，POS）： 多个求和项的与运算。例如：(X+Y) � (�X + �Y + Z)。 6 3.3 逻辑函数的标准表示  与-或表达式：积之和表达式SOP 与项 乘积项  或-与表达式：和之积表达式POS 7 𝑓𝑓(𝐴𝐴, 𝐵𝐵, 𝐶𝐶) = 𝐴𝐴 • 𝐵𝐵 + 𝐴𝐴 • 𝐶𝐶 + 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝑓𝑓(𝐴𝐴, 𝐵𝐵, 𝐶𝐶) = (𝐴𝐴 + 𝐵𝐵) • (𝐴𝐴 + 𝐶𝐶) • (𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶) 求和项 或项 3.3 逻辑函数的标准表示  标准乘积项（标准求和项）：每个逻辑变量出现且仅出现一次的乘 积项（求和项）。 n 个变量的标准项共有2n个。  标准乘积项也称为最小项，每个最小项对应真值表中一个输入组合， 赋值该输入组合后，最小项的运算结果为1。  若某输入组合对应的二进制数值为 i，则用mi表示该最小项，i称为 该最小项的编号。 • 如：�𝐀𝐀 • �𝐁𝐁 • 𝐂𝐂 只有当输入𝟎𝟎𝟎𝟎𝟎𝟎时，结果为𝟎𝟎，最小项编号为𝒎𝒎𝟎𝟎  标准求和项也称为最大项，每个最大项对应真值表中一个输入组合， 赋值该输入组合后，最大项的运算结果为0。  若某输入组合对应的二进制数值为 i，则用Mi表示该最大项，i称为 该最大项的编号。 • 如：�𝐀𝐀 + �𝐁𝐁 + 𝐂𝐂 只有输入𝟎𝟎𝟎𝟎𝟎𝟎时，结果为𝟎𝟎，最大项编号为𝐌𝐌𝟔𝟔 8 A · B A · B A · B A · B A · B · C A · B · C A · B · C A · B · C A · B · C A · B · C A · B · C A · B · C 当每个逻辑变量 取值定下来之后 ，只有一个乘积 项的输出值为1 当每个逻辑变量 取值定下来之后 ，只有一个求和 项的输出值为0 A + B A + B A + B A + B 11 10 01 00 00 01 10 11 3.3 逻辑函数的标准表示  标准乘积项（标准求和项）：每个逻辑变量出现且仅出现一次的乘 积项（求和项）。 n 个变量的标准项共有2n个。  标准乘积项也称为最小项，每个最小项对应真值表中一个输入组合， 赋值该输入组合后，最小项的运算结果为1。  若某输入组合对应的二进制数值为 i，则用mi表示该最小项，i称为 该最小项的编号。 • 如：�𝐀𝐀 • �𝐁𝐁 • 𝐂𝐂 只有当输入𝟎𝟎𝟎𝟎𝟎𝟎时，结果为𝟎𝟎，最小项编号为𝒎𝒎𝟎𝟎  标准求和项也称为最大项，每个最大项对应真值表中一个输入组合， 赋值该输入组合后，最大项的运算结果为0。  若某输入组合对应的二进制数值为 i，则用Mi表示该最大项，i称为 该最大项的编号。 • 如：�𝐀𝐀 + �𝐁𝐁 + 𝐂𝐂 只有输入𝟎𝟎𝟎𝟎𝟎𝟎时，结果为𝟎𝟎，最大项编号为𝐌𝐌𝟔𝟔 910 A B C Y 最小项 最大项 000 1 001 0 010 0 011 0 100 0 101 0 110 1 111 1 𝑌𝑌 =(𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶)•(𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶)•(𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶)•(𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶)•(𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶） =∏ 𝑀𝑀(1,2,3,4,5) 𝑌𝑌 = 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 + 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 + 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 = ∑𝑚𝑚 (0,6,7) 标准和/最小项列表：使得函 数输出为1的最小项之和。 标准积/最大项列表：使得函 数输出为0的最大项之积。 真值表 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 • 𝐵𝐵 • 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 𝐴𝐴 + 𝐵𝐵 + 𝐶𝐶 真值表的表示是唯一的，因此标准项列表的表示也是唯一的。 序 号 0 1 2 3 4 5 6 7 3.3 逻辑函数的标准表示3.3 逻辑函数的标准表示  函数的最小项列表和最大项列表等价且可相互转换。  n 个变量的逻辑函数其最小项列表编号集合与最大项列表编号集合 之并集为n位编号全集{0，1，…，2n-1}，且这两个集合之交集为0， 它们为互补关系。  两个列表之间可方便转换，只需对相应的编号集合求补即可。 • f(A,B,C)=Σ m (0,1,2,3) = Π M(4,5,6,7) • f(X,Y) = Σ m (1) = Π M(0,2,3) • f(A,B,C) = Σ m (0,6,7) = Π M(1,2,3,4,5) 11 标准表示并非最简表示 第四讲 逻辑函数的化简与变换 代数法化简 卡诺图化简 等效逻辑符号表示 逻辑函数变换 12 4 逻辑函数的化简与变换 化简的目的  减少输入变量的数目 • 最小项和最大项的数目随变量数呈指数级增长  减少门的数目 • 可以使用更小的集成电路器件  减少电路的规模 • 门越小速度越快；可以减少电路层级数。 13 1. 通常不考虑输入反相器的成本。 2. 通常从真值表或标准范式开始化简。 4.1 代数法化简  利用布尔代数的公理、定理、定律等，消去逻辑表达式式中多余的 乘积项或多余的因子，进行化简。 • 利用互补律T5：𝐗𝐗 + 𝐗𝐗 = 𝟎𝟎，可消去一个变量。 • 利用吸收律T9：X+X•Y=X 和 X + �𝑿𝑿 • Y= X+Y，可消去乘积项 中一个因子。 • 利用组合律T10：X•Y+X •�𝐘𝐘=X 和 (X+Y)•(X+�𝐘𝐘 )=X，可消去 一个变量。 • 利用一致律T11，可消去冗余的乘积项。  如果表达式的层级超过了两级，则先转换为两级。  如有整体取反运算，则先转换为单变量取反运算。 14 与或，或与 4.1 代数法化简  化简：F(w,x,y,z)=w�x+w�x�y+ �𝒘𝒘 �y�z+ �𝒘𝒘 � �𝒚𝒚 �z+ �𝒘𝒘 �x�y� �𝒛𝒛。 =w•x+w(y•z+y•z+x•y•z ) (根据T8和T9) =w•x+w(z+x•y•z ) (根据T10) =w•x+w(z+x•y) (根据T9) =w•x+w•z+w•x•y (根据T8) =(w+w•y)•x+w•z (根据T8) =(w+y)•x+w•z (根据T9) =w•x+x•y+w•z (根据T8)  和原表达式相比，化简后减少了2个与门、11个输入端。 15 原来第一级有5个与门，15个输入端；第二级是5个与门的输出作为输入端，接一个或门 化简后第一级有3个与门，6个输入端；第二级是3个与门的输出作为输入端，接一个或门 4.1 代数法化简 化简 f(A,B,C,D) = ₦m(1,3,5,7) =�A � �𝐵𝐵 � ̅𝐶𝐶 � 𝐷𝐷 + �A � �𝐵𝐵 � 𝐶𝐶 � 𝐷𝐷 + ̅𝐴𝐴 � 𝐵𝐵 � ̅𝐶𝐶 � 𝐷𝐷 + ̅𝐴𝐴 � 𝐵𝐵 � 𝐶𝐶 � 𝐷𝐷 = ̅𝐴𝐴 � �𝐵𝐵 � 𝐷𝐷 + ̅𝐴𝐴 � 𝐶𝐶 � 𝐷𝐷 + ̅𝐴𝐴 � 𝐵𝐵 � 𝐷𝐷 = ̅𝐴𝐴 � 𝐷𝐷 + ̅𝐴𝐴 � 𝐶𝐶 � 𝐷𝐷= ̅𝐴𝐴 � 𝐷𝐷 16  优点 • 不受变量数目的限制 • 化简比较直观  缺点 • 没有一定的规律和步骤，技巧性很强 • 难以判断化简结果是否最简  判别逻辑表达式是否为最小化 • 乘积项（与项）最少 • 每个乘积项中因子（逻辑变量）最少 4.2 卡诺图化简  卡诺图（Karnaugh map）: 真值表的图形化表示，把能化简的最 小项通过相邻项合并的可视化方式标识出来。 • n个变量的卡诺图是一个含有2n个单元的矩阵图 • 每一行和每一列的编号对应逻辑变量的输入组合，0 表示反变 量，1 表示原变量 • 编号按照格雷码的顺序排列，即相邻编号只有1位不同 • 根据格雷码的规则，空间位置上（上下、左右或首尾）相邻的 小方格具有逻辑相邻性 17 10 14 6 2 9 13 5 1 11 15 7 3 8 4 12 0 AB CD 00 01 11 10 00 01 11 10 m3 m1 m2 m0 B A 0 1 0 1 AB B A 0 1 0 1 𝐀𝐀𝐁𝐁 𝐀𝐀𝐁𝐁 𝐀𝐀𝐁𝐁 每个单元对应一个最小项 4.2 卡诺图化简  行、列可互换 18 10 14 6 2 9 13 5 1 11 15 7 3 8 4 12 0 WX YZ 00 01 11 10 00 01 11 10 5 7 3 1 4 2 6 0 XY Z 00 01 11 10 0 1 A、B、C取值相反 A取值相反 4.2 卡诺图化简  每个单元标注对应最小项在真值表中 的输出值，若为1，称之“1单元”  若两个“1单元”相邻，则表示两个 最小项仅1个变量相反。根据T10， 这两个最小项可合并为一个乘积项， 并消去那个具有相反取值的变量  相邻单元数越多可消去的变量数越多  相邻2i个“1单元” 可以合并成一个 乘积项，并消去i个不同的变量  使用一个方框来标注可以合并的“1 单元” ，这个方框称为卡诺圈 19 1 1 A BC 00 01 11 10 0 1 𝐵𝐵 � 𝐶𝐶 DB ⋅ 1 1 1 1 AB CD 00 01 11 10 00 01 11 10 1 1 1 1 1 1 1 1 AB CDE 000 001 011 010 110 111 101 100 00 01 11 10 𝐷𝐷 � 𝐸𝐸 A和C取值相反 4.2 卡诺图化简 20 简化后的表示也并非一定是：最简表示 4.2 卡诺图化简  蕴涵项是一个乘积项，覆盖了逻辑函数的1个或 多个最小项。 如，F(X,Y,Z)=∑m(3,5,6,7)的蕴涵项有：�𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙、 𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙和𝐘𝐘 � 𝐙𝐙等，𝐘𝐘 � 𝐙𝐙等价于 �𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙 + 𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙， 因而Y�Z覆盖了最小项�𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙和𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙。 因此，𝐘𝐘 � 𝐙𝐙是蕴涵项。  质蕴涵项(prime implicant) ：不能被逻辑函数的其它蕴涵项所覆盖的蕴涵项。 如，F(X,Y,Z)=∑m(3,5,6,7)的质蕴涵项有：𝐘𝐘 � 𝐙𝐙、𝐗𝐗 � 𝐙𝐙、𝐗𝐗 � 𝐘𝐘，而其他蕴含项都 可以被另外的蕴含项所覆盖，因此，不是质蕴含项  实质蕴涵项(essential prime implicant)：覆盖的最小项中至少有一个最小项 是没有被其他质蕴涵项所覆盖的质蕴涵项。 如，F(X,Y,Z)=∑m(3,5,6,7)的实质蕴涵项有：𝐘𝐘 � 𝐙𝐙、𝐗𝐗 � 𝐙𝐙、𝐗𝐗 � 𝐘𝐘。 𝐘𝐘 � 𝐙𝐙覆盖的�𝐗𝐗 � 𝐘𝐘 � 𝐙𝐙、𝐗𝐗 � 𝐙𝐙覆盖的𝐗𝐗 � �𝐘𝐘 � 𝐙𝐙、𝐗𝐗 � 𝐘𝐘覆盖的𝐗𝐗 � 𝐘𝐘 � �𝐙𝐙都没有被其他质蕴含 项所覆盖。  质蕴涵项覆盖的最小项越多（即卡诺圈越大）越可能是实质蕴涵项。 21 4.2 卡诺图化简  若逻辑函数的所有最小项都被 一组质蕴涵项所覆盖，则该组 质蕴涵项称为函数的一个覆盖 (Cover)，它一定包含所有的 实质蕴涵项。 如，{𝐘𝐘 � 𝐙𝐙，𝐗𝐗 � 𝐙𝐙，𝐗𝐗 � 𝐘𝐘}是 F(X,Y,Z)=∑m(3,5,6,7)的一个 覆盖，包含所有实质蕴含项  最小覆盖：包含质蕴涵项数最 少，并且质蕴涵项中的变量总 数也是最少。  逻辑函数化简问题就转化为寻 找函数的最小覆盖问题。 22 最小覆盖对应的逻辑表达式称为：最简逻辑表达式 4.2 卡诺图化简 蕴涵项： 最小项： {�𝐀𝐀 � �𝐁𝐁 � 𝐂𝐂, �𝐀𝐀 � 𝐁𝐁 � 𝐂𝐂, A � �𝐁𝐁 � ̅𝐂𝐂, A � �𝐁𝐁 � 𝐂𝐂, A � B � C} 含有两个最小项的蕴涵项： 含有四个最小项的蕴涵项： 质蕴涵项，没有被覆盖的蕴涵项： {A � �𝐁𝐁, C} 实质蕴涵项 = {A � �𝐁𝐁, C}。A � �𝐁𝐁 覆盖了不能被C覆盖的m4；C覆盖 了不能被A � �𝐁𝐁覆盖的m1 、m3 、m7 最小覆盖 =A� �𝐁𝐁+ C 23 1 1 A BC 00 01 11 10 0 1 1 11 1 1 A BC 00 01 11 10 0 1 1 11 1 1 A BC 00 01 11 10 0 1 1 11 {A � �𝐁𝐁, �𝐀𝐀 � 𝐂𝐂, A � C, �𝐁𝐁 � 𝐂𝐂, B � C} {C}  确定逻辑函数F(A,B,C)=Σm(1,3,4,5,7)的最小覆盖的方法 A � �𝐁𝐁 C 被蕴含项C覆盖 4.2 卡诺图化简 F(A,B,C,D) = ∑m(1,2,5,7,8,10,12,13,15) 24 1 1 1 1 1 1 1 1 CD AB 00 01 11 10 00 01 11 10 1 1 1 1 1 1 1 1 1 CD AB 00 01 11 10 00 01 11 10 1 1 1 1 1 1 1 1 1 CD AB 00 01 11 10 00 01 11 10 1 找出所有质蕴涵项 选择所有的实质蕴涵项 在剩余质蕴含项中 选择最小覆盖子集B�D, � 𝐴𝐴 � ̅𝐶𝐶 � D, �𝐵𝐵 � 𝐶𝐶 � �𝐷𝐷, 𝐴𝐴 � 𝐵𝐵 � ̅𝐶𝐶, 𝐴𝐴 � �𝐵𝐵 � �𝐷𝐷, A� ̅𝐶𝐶 � �𝐷𝐷 B� D + ̅𝐴𝐴 � ̅𝐶𝐶 � D + � 𝐵𝐵 � 𝐶𝐶 � �𝐷𝐷 A� ̅𝐶𝐶 � �𝐷𝐷 合并实质蕴含项和最小覆盖子集，得到最简逻辑表达式： F(A,B,C,D)=B � D+�𝐀𝐀 � ̅𝐂𝐂 �D+�𝐁𝐁 � 𝐂𝐂 � �𝐃𝐃 +A� ̅𝐂𝐂 � �𝐃𝐃 这是蕴含项，但不是 质蕴含项 25 4.2 卡诺图化简 ∑= )15,13,11,10,9,4,2,1(),,,( mDCBAY 1 1 1 1 1 1 1 1 AB CD 00 01 11 10 00 01 11 10 𝑌𝑌 = 𝐴𝐴 ⋅ 𝐷𝐷 + 𝐵𝐵 ⋅ 𝐶𝐶 ⋅ 𝐷𝐷 + 𝐵𝐵 ⋅ 𝐶𝐶 ⋅ 𝐷𝐷 + 𝐴𝐴 ⋅ 𝐵𝐵 ⋅ 𝐶𝐶 ⋅ 𝐷𝐷 这是质蕴含项，但 不是实质蕴含项 4.2 卡诺图化简  利用对偶性原理，卡诺图也可以用来化简和之积表达式，只需要将 真值表中输出值为0的最大项对应的单元标注为0，然后合并相邻的 “0 单元”，得到求和的质蕴涵项。  卡诺图化简优点 • 方便、直观、容易掌握  卡诺图化简缺点 • 受到变量数量的约束，当变量数大于6时，卡诺图绘制以及相邻 关系的识别将变得非常复杂，从而导致难以直观化简。 26 在现代数字系统设计中，大多采用编程实现逻辑函数的自动化简。 4.3 逻辑函数变换——实际电路实现方式  等效逻辑符号：功能相同，符号不同。 • 反相输出门利用一次德•摩根定理，转换为非反相输出门。 • 非反相输出门两次取反，利用德•摩根定理转换下层的取反运 算，可得到反相输出门。 27 4.3 逻辑函数变换——实际电路实现方式  在数字电路中，与非门和或非门通常比与门和或门的执行速度快。  将“与-或”表达式转换为“与非-与非”表达式 • 将“与-或”表达式整体两次取反，然后运用德摩根定律转换 下层的取反运算，就可以得到“与非-与非”表达式 • 使用与非门替代与门和或门来实现逻辑函数 • 例如：F(X,Y,Z)=X•Y+Y•Z+X•Z，转换为： 28 F(X,Y,Z)=𝑋𝑋 � Y + Y � Z + 𝑋𝑋 � Z=𝑋𝑋 � 𝑌𝑌 � 𝑌𝑌 � 𝑍𝑍 � 𝑋𝑋 � 𝑍𝑍 4.3 逻辑函数变换  任何积之和表达式：都可使用“与-或”电路和“与非-与非”电路这 两种方法实现。  任何和之积表达式：都可使用“或-与”电路和“或非-或非”电路这 两种方法实现。  任何两级电路：在第一级的输出和第二级的输入之间加入一对反相 器，来实现用反相门替代与门和或门。 29 等效：与非门 等效：或非门 第2章总结  现实世界的模拟信号需转换为数字信号。数字系统中的所有信号都 是二值的，用0和1表示  逻辑门是最基础的数字电路，可通过CMOS晶体管实现  最基本的逻辑运算有与、或、非三种运算，对应的逻辑门分别为与 门、或门和非门  布尔代数是数字系统分析和设计的基础理论工具，对应的公理系统 和定理可对逻辑表达式进行化简，实现逻辑函数间的相互转换  通常使用真值表、波形图以及逻辑表达式来描述逻辑变量间的关系  可使用代数法、卡诺图等来化简逻辑表达式  在实现数字系统时，为了提高速度、降低成本，通常利用与非门和 或非门来构建电路。 30 作业：习题3、5、6（1）、7（5）、7（8）、8（1）、8（2）、 8（4）、12、13（2）、13（5） 9月30日之前提交","libVersion":"0.2.4","langs":""}